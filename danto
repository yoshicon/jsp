string{
	거의 고정되면 이거
}
stringbuffer{
	속도 좀 느림
	스레드에 안전
	이거 웹 프로그래밍 할 때 이거 ㅊㅊ
	에러가 날 확률이 적어
}
stringbuilder{
	스레드에 안전하진 않음
}

DB{
CRUD
	만들기
	읽기
	수정
	삭제
}

인코딩{////////////////////////////////////////// 필수
	workspace
	spelling
}

eclips ee - 웹 개발할 때
oracle 11g xe
sql 디벨로퍼
ojdbc6.jar{
	저장 후 이클립스에서 지정한 폴더에 저장
	web-inf 밑에
	jre/lib/etc
}

solid{
	각 뭔지 5번쯤 읽어보세
}

DB 건드릴 때 삭제 자제
당신의 delete, update로 대체되었다
지워진것 처럼 보이게 바꾸장
쓰레기같아도 따로 빼두자


select 보고싶은 내용
from "table로 해석될 수 있는 모든거"

quota - 얼마만큼 사용 가능한지 할당
quota 0m on system
quota 0m on sysaux
quota 0m on UNDOTBS1



create table member(
	userName VARCHAR(25),
	userID   VARCHAR(25),
	userIW   VARCHAR(40),
	useraDDR VARCHAR(100),
);

oracledriver.class

DB 건드릴 때 시스템 계정으로 건드리면 아주 좆대는거에여

create table sample(
    col1 number(5) null, /*이게 인라인방식으로 제약조건 거는거 null, not null은 이렇게밖에 못함*/
    col2 number(5,2) not null,
    col3 varchar2(5) UNIQUE,
    col4 varchar2(15),
    CONSTRAINT spl_clm5_pk PRIMARY key (col4)   /*이거시 아웃라인방식으로 제약조건 거는거 선언하고 그 담에 조건 주는거*/
				ㄴ이 부분이 제약조건을 이렇게 부른다고 말하는거
);

복합 유니크, 프라이머리 가능
인라인 방식으로는 무리
무적권 아웃라인 방식으로 해야함


DB에서 지워도 커밋 안하면 저기 페이지에선 다 보임


서브넷 마스크로 동일한 네트워크에서 접속했는지 외부에서 접속했는지 판별 가능
255.255.255.0 => 이진법으로
11111111.11111111.11111111.00000000 => 앞에 3자리만 일치하면 같은 네트워크로 인식
그러고 다른 아이피랑 비트 && 연산

논리연산(if) -> 산술연산(+ - * /) -> 비트연산(<< >>)
스위치 -> if else문으로 

리팩토리 과정{
	1. 반복되는 기능 => 동일클래스의 메소드로 분리
	2. 타 클래스에서도 쓴다면 => 독립된 클래스로 만들기
	3. 기능이 상황에 따라 변할 수 있다면 인터페이스와 구현 관계로 제작
}

필드는 heap영역에 생성
지역 변수는 stack영역에 생성
static변수는 static영역에 생성


DB 말고 file 사용시{ => 속도가 앵간히 빠름
	나름대로의 규칙을 정함 => json 안쓰고 가장 간단하게 ajax 구현 가능
}

파일 구분{
	1. 바이너리 파일	=> 메모장으로 열었는데 깨져있는거
		프로그램, 컴퓨터 기종마다 해석하는 방법이 다름
	2. 텍스트 파일		=> 메모장으로 열었는데 안깨진거
		프로그램, 컴퓨터 기종 상관없이 동일한 해석
}

어떤 수의 음수 : 어떤 수의 보수{
	5-3 = 2
	5+7 = 12 -> 2
}

127 - 3
01111111 -> 127
00000011 -> 3
11111100 -> 3 : 1의보수
11111101 -> 3 : 2의 보수

emmet
div{babo $}*7
div태그에 babo1~7까지 반복
커서 마지막에 두고 탭, 컨트롤+E
div>((ul>li{$번째 목록}*6)+hr)*3

서브라임 텍스트 + 에밋
=> ! + 탭 => html기본 템플릿 자동완성





시험{


1. os {
1. os 특 : 컴퓨터 하드웨어를 좀 더 쉽게 쓸 수 있게 인터페이스 제공

2. cli 파일 명령어 아닌거 : 4) format

3. 운영체제 핵심기능 : 메모리, 프로세스 관리
}

//////////////////////////////////////////////////////////////////////////////

2. DB {
1. dbms

2. 상용, 오픈소스 dbms 특
상용 : 특 - 특정 회사에서 팜 | 장 - 유지보수 원활 | 유료임
오픈 : 특 - 오픈 라이선스 정책 준용 | 장 - 공짜임 | 단 - 유지보수 좀 힘듬

3. 정규화
뜻 : 무결성 확보, 중복성 배제, 정확한 데이터 삽입
1차 : 반복되는 그룹 추출
2차 : 부분 함수 종속성 제거

4. 학번, 이름, 주소, 성별 테이블
CREATE TABLE 바보 (
        학번 number(10),
        이름 varchar(20),
        주소 varchar(100),
        성별 char(3) 
);
} 

//////////////////////////////////////////////////////////////////////////////

3. 네트워크 기초 활용{
1. 패킷 교환 방식

2. 전송계층

3. c클래스 서브넷 마스크 : 192.0.0.0 ~ 223.255.255.255 중 하나

4. 2, 3계층 : 데이터 링크, 네트워크 계층

5. tcp, udp 특
tcp : 신뢰성 있는 정보 전송
udp : 하나의 정보를 다수가 수신 할 때 사용

6. 포트 번호
http : 80
ftp : 21
pop3 : 110
}

//////////////////////////////////////////////////////////////////////////////

기본 개발환경 구축 {
1. 윈도우 home, pro, workstation 설명
home : 개인 사용자에게 최적화
pro : 소규모 기업용
workstation : 복구기능 지원

2. 자바 특
높은 이식성
객체지향
함수적 스타일
멀티스레드 구현 가능

3. 실습 ㄱ다ㄱ
}


}
